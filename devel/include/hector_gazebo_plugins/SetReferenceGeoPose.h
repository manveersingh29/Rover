// Generated by gencpp from file hector_gazebo_plugins/SetReferenceGeoPose.msg
// DO NOT EDIT!


#ifndef HECTOR_GAZEBO_PLUGINS_MESSAGE_SETREFERENCEGEOPOSE_H
#define HECTOR_GAZEBO_PLUGINS_MESSAGE_SETREFERENCEGEOPOSE_H

#include <ros/service_traits.h>


#include <hector_gazebo_plugins/SetReferenceGeoPoseRequest.h>
#include <hector_gazebo_plugins/SetReferenceGeoPoseResponse.h>


namespace hector_gazebo_plugins
{

struct SetReferenceGeoPose
{

typedef SetReferenceGeoPoseRequest Request;
typedef SetReferenceGeoPoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetReferenceGeoPose
} // namespace hector_gazebo_plugins


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPose > {
  static const char* value()
  {
    return "fe903ca95d0210defda73a1629604439";
  }

  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPose&) { return value(); }
};

template<>
struct DataType< ::hector_gazebo_plugins::SetReferenceGeoPose > {
  static const char* value()
  {
    return "hector_gazebo_plugins/SetReferenceGeoPose";
  }

  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPose&) { return value(); }
};


// service_traits::MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPoseRequest> should match
// service_traits::MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPose >
template<>
struct MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPoseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPose >::value();
  }
  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPoseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hector_gazebo_plugins::SetReferenceGeoPoseRequest> should match
// service_traits::DataType< ::hector_gazebo_plugins::SetReferenceGeoPose >
template<>
struct DataType< ::hector_gazebo_plugins::SetReferenceGeoPoseRequest>
{
  static const char* value()
  {
    return DataType< ::hector_gazebo_plugins::SetReferenceGeoPose >::value();
  }
  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPoseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPoseResponse> should match
// service_traits::MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPose >
template<>
struct MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPoseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hector_gazebo_plugins::SetReferenceGeoPose >::value();
  }
  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPoseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hector_gazebo_plugins::SetReferenceGeoPoseResponse> should match
// service_traits::DataType< ::hector_gazebo_plugins::SetReferenceGeoPose >
template<>
struct DataType< ::hector_gazebo_plugins::SetReferenceGeoPoseResponse>
{
  static const char* value()
  {
    return DataType< ::hector_gazebo_plugins::SetReferenceGeoPose >::value();
  }
  static const char* value(const ::hector_gazebo_plugins::SetReferenceGeoPoseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HECTOR_GAZEBO_PLUGINS_MESSAGE_SETREFERENCEGEOPOSE_H
